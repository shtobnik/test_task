{"version":3,"sources":["../../src/app/comments-list/comments-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAWa,YAAY;gBACrB,sBAAqB,YAAyB;oBAAzB,iBAAY,GAAZ,YAAY,CAAa;gBAAG,CAAC;gBAMlD,sCAAe,GAAf;oBACI,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;oBAEpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC3B,CAAC;gBAGD;;;;;mBAKG;gBACH,kCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;oBAEvB,IAAI,SAAS,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAE7D,EAAE,CAAC,CAAE,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,CAAE,CAAC,CAAC,CAAC;wBAClF,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBAC/C,CAAC;oBAED,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;oBAE3B,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,WAAY,CAAC,CAAC,CAAC;wBACtB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;oBACrD,CAAC;gBAEL,CAAC;gBAGD;;;mBAGG;gBACH,oCAAa,GAAb,UAAc,MAAM;oBAApB,iBAOC;oBANG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;yBAC5C,SAAS,CACN;wBACI,KAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;oBACxC,CAAC,CACJ,CAAC;gBACV,CAAC;gBAGD;;;;;mBAKG;gBACH,kCAAW,GAAX,UAAY,SAAS,EAAE,WAAW,EAAE,OAAO;oBAA3C,iBAkBC;oBAjBG,EAAE,CAAC,CAAE,CAAC,OAAQ,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,WAAW,CAAC;6BAClE,SAAS,CACN;4BACI,KAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;wBACxC,CAAC,EACD,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,EAAzB,CAAyB,CACnC,CAAC;oBACN,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,CAAC,WAAW,CAAC;6BACnE,SAAS,CACN;4BACI,KAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;wBACxC,CAAC,EACD,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,EAAzB,CAAyB,CACnC,CAAC;oBACN,CAAC;gBACL,CAAC;gBAEL,mBAAC;YAAD,CA7EA,AA6EC,IAAA;YA7EY,YAAY;gBANxB,gBAAS,CAAC;oBACP,uBAAuB;oBACvB,QAAQ,EAAE,eAAe;oBACzB,WAAW,EAAE,kDAAkD;oBAC/D,SAAS,EAAE,CAAC,iDAAiD,CAAC;iBACjE,CAAC;iDAEqC,0BAAW;eADrC,YAAY,CA6ExB;;QAAA,CAAC","file":"comments-list.component.js","sourcesContent":["import { Component, AfterViewInit, Input } from \"@angular/core\";\nimport { DataService } from '../data.service';\nimport { Subscription } from 'rxjs';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    // moduleId: module.id,\n    selector: \"comments-list\",\n    templateUrl: './app/comments-list/comments-list.component.html',\n    styleUrls: ['./app/comments-list/comments-list.component.css']\n})\nexport class CommentsList implements AfterViewInit {\n    constructor (private _dataService: DataService) {}\n\n    replyOpen:   boolean;\n    isReplyForm: boolean;\n    response;\n\n    ngAfterViewInit() {\n        this._dataService.getCommentsList();\n\n        this.replyOpen = false;\n    }\n\n\n    /**\n     * \n     * Toggle reply/edit form\n     * @param event\n     * @param isReply \n     */\n    replyToggle($event, isReply) {\n\n        let formBlock = document.getElementsByName($event.target.id);\n\n        if ( formBlock[0].hidden || (!formBlock[0].hidden && this.isReplyForm === isReply) ) {\n            formBlock[0].hidden = !formBlock[0].hidden;\n        }\n\n        this.isReplyForm = isReply;\n\n        if ( !this.isReplyForm ) {\n            document.querySelector('.reply-form')[0].focus();\n        }\n\n    }\n\n\n    /**\n     * remove Comment\n     * @param  event\n     */\n    removeComment($event) {\n        this._dataService.removeComment($event.target.id)\n            .subscribe(\n                () => {\n                    this._dataService.getCommentsList();\n                }\n            );\n    }\n\n\n    /**\n     * edit comment\n     * @param commentId \n     * @param formContent \n     * @param isReply \n     */\n    editComment(commentId, formContent, isReply) {\n        if ( !isReply ) {\n            this._dataService.onEditComment(commentId, formContent.editComment)\n            .subscribe(\n                () => {\n                    this._dataService.getCommentsList();\n                },\n                err => console.error('err', err)\n            );\n        } else {\n            this._dataService.sendNewComment(commentId, formContent.editComment)\n            .subscribe(\n                () => {\n                    this._dataService.getCommentsList();\n                },\n                err => console.error('err', err)\n            );\n        }\n    }\n\n}"],"sourceRoot":"/src"}